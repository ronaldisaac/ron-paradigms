<?xml version="1.0"?>

<project name="silent-install" basedir="." default="silent_install">
<!--The following TASKDEF is needed to include the ANT-CONTRIB libraries -->
<!--<taskdef resource="net/sf/antcontrib/antlib.xml"/> -->

	<property environment="env"/>
	<property file="silent-install.properties"/> 

	<taskdef resource="net/sf/antcontrib/antlib.xml">
	  <classpath>
		<pathelement location="${user.dir}/ant-contrib.jar"/>
	  </classpath>
	</taskdef>
	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
	  <classpath>
		<pathelement location="${user.dir}/ant-contrib.jar"/>
	  </classpath>
	</taskdef>
	
   <condition property="isUnix">
      <os family="unix"/>
   </condition>

   <if>
    <equals arg1="${isUnix}" arg2="true"/>
   	<then>
   		<property name="os_family" value="unix" />
   	</then>
   	<else>
   		<property name="os_family" value="windows" />
   	</else>
   </if>

  <target name="create_repository">
	<echo file="passwordfile.txt">${SYS_PASSWORD}${line.separator}${SCHEMA_PASSWORD}</echo>	
	<if>
	    <equals arg1="${os_family}" arg2="unix"/>
	    <then>
		<echo file="create_repository">${MIDDLEWARE_HOME}/oracle_common/bin/rcu -silent -createRepository -databaseType ORACLE -connectString ${DATA_SOURCE_URL} -dbUser sys -dbRole SYSDBA -schemaPrefix ${SERVERS_SCHEMA_PREFIX} -useSamePasswordForAllSchemaUsers true -component STB -component WLS &lt; passwordfile.txt</echo>
		<exec executable="/bin/bash">
		   <arg value="create_repository"/>
		</exec>
		<delete file="create_repository"/>
	    </then>
	    <else>
		<echo file="create_repository.bat">${MIDDLEWARE_HOME}/oracle_common/bin/rcu -silent -createRepository -databaseType ORACLE -connectString ${DATA_SOURCE_URL} -dbUser sys -dbRole SYSDBA -schemaPrefix ${SERVERS_SCHEMA_PREFIX} -useSamePasswordForAllSchemaUsers true -component STB -component WLS &lt; passwordfile.txt</echo>
		<exec executable="create_repository.bat"/>
		<delete file="create_repository.bat"/>
  	    </else>
	</if>
	<delete file="passwordfile.txt"/>
  </target>

  <target name="drop_repository">
	<echo file="passwordfile.txt">${SYS_PASSWORD}${line.separator}${SCHEMA_PASSWORD}</echo>
	<if>
	    <equals arg1="${os_family}" arg2="unix"/>
	    <then>
		<echo file="drop_repository">${MIDDLEWARE_HOME}/oracle_common/bin/rcu -silent -dropRepository -databaseType ORACLE -connectString ${DATA_SOURCE_URL} -dbUser sys -dbRole SYSDBA -schemaPrefix ${SERVERS_SCHEMA_PREFIX} -component STB -component WLS &lt; passwordfile.txt</echo>
		<echo>${user.dir}</echo>
		<exec executable="/bin/bash">
		   <arg value="drop_repository"/>
		</exec>
		<delete file="drop_repository"/>
	    </then>
	    <else>
		<echo file="drop_repository.bat">${MIDDLEWARE_HOME}/oracle_common/bin/rcu -silent -dropRepository -databaseType ORACLE -connectString ${DATA_SOURCE_URL} -dbUser sys -dbRole SYSDBA -schemaPrefix ${SERVERS_SCHEMA_PREFIX} -component STB -component WLS &lt; passwordfile.txt</echo>
		<exec executable="drop_repository.bat"/>
		<delete file="drop_repository.bat"/>
  	    </else>
	</if>
	<delete file="passwordfile.txt"/>
  </target>
  
  <target name="drop_domain_repository">
	<echo file="passwordfile.txt">${SYS_PASSWORD}${line.separator}${SCHEMA_PASSWORD}</echo>
	<if>
	    <equals arg1="${os_family}" arg2="unix"/>
	    <then>
		<echo file="drop_domain_repository">${MIDDLEWARE_HOME}/oracle_common/bin/rcu -silent -dropRepository -databaseType ORACLE -connectString ${DATA_SOURCE_URL} -dbUser sys -dbRole SYSDBA -schemaPrefix ${SERVERS_SCHEMA_PREFIX} -component OPSS &lt; passwordfile.txt</echo>
		<echo>${user.dir}</echo>
		<exec executable="/bin/bash">
		   <arg value="drop_domain_repository"/>
		</exec>
		<delete file="drop_domain_repository"/>
	    </then>
	    <else>
		<echo file="drop_domain_repository.bat">${MIDDLEWARE_HOME}/oracle_common/bin/rcu -silent -dropRepository -databaseType ORACLE -connectString ${DATA_SOURCE_URL} -dbUser sys -dbRole SYSDBA -schemaPrefix ${SERVERS_SCHEMA_PREFIX} -component OPSS &lt; passwordfile.txt</echo>
		<exec executable="drop_domain_repository.bat"/>
		<delete file="drop_domain_repository.bat"/>
  	    </else>
	</if>
	<delete file="passwordfile.txt"/>
  </target>
  
  <target name="create_domain_repository">
	<echo file="passwordfile.txt">${SYS_PASSWORD}${line.separator}${SCHEMA_PASSWORD}</echo>
	<if>
	    <equals arg1="${os_family}" arg2="unix"/>
	    <then>
		<echo file="create_domain_repository">${MIDDLEWARE_HOME}/oracle_common/bin/rcu -silent -createRepository -databaseType ORACLE -connectString ${DATA_SOURCE_URL} -dbUser sys -dbRole SYSDBA -schemaPrefix ${SERVERS_SCHEMA_PREFIX} -useSamePasswordForAllSchemaUsers true -component OPSS &lt; passwordfile.txt</echo>
		<echo>${user.dir}</echo>
		<exec executable="/bin/bash">
		   <arg value="create_domain_repository"/>
		</exec>
		<delete file="create_domain_repository"/>
	    </then>
	    <else>
		<echo file="create_domain_repository.bat">${MIDDLEWARE_HOME}/oracle_common/bin/rcu -silent -createRepository -databaseType ORACLE -connectString ${DATA_SOURCE_URL} -dbUser sys -dbRole SYSDBA -schemaPrefix ${SERVERS_SCHEMA_PREFIX} -useSamePasswordForAllSchemaUsers true -component OPSS &lt; passwordfile.txt</echo>
		<exec executable="create_domain_repository.bat"/>
		<delete file="create_domain_repository.bat"/>
  	    </else>
	</if>
	<delete file="passwordfile.txt"/>
  </target>

  <target name="create_domain">
	<input     message="Please enter the Admin Server user name:" addproperty="adminUser"/>
	<input     message="Please enter the Admin Server password:" addproperty="adminPassword"/>
	<copy file="create_environment.py" tofile="create_environment_wk.py" overwrite="true"/>
	<replace file="create_environment_wk.py" token="adminUser"  value="${adminUser}"/>
	<replace file="create_environment_wk.py" token="adminPassword"  value="${adminPassword}"/>
	<replace file="create_environment_wk.py" token="MACHINE_ADDRESS"  value="${MACHINE_ADDRESS}"/>
	<replace file="create_environment_wk.py" token="APP_SERVER_NAMES"  value="${APP_SERVER_NAMES}"/>
	<replace file="create_environment_wk.py" token="APP_SERVER_PORTS"  value="${APP_SERVER_PORTS}"/>
	<echo>CREATE DOMAIN</echo>
	<if>
	    <equals arg1="${os_family}" arg2="unix"/>
	    <then>
		<echo file="create_domain">#!/bin/sh${line.separator} ${MIDDLEWARE_HOME}/oracle_common/common/bin/wlst.sh -loadProperties ${user.dir}/silent-install.properties ${user.dir}/create_environment_wk.py</echo>
		<echo>${user.dir}</echo>
		<exec executable="/bin/bash">
		   <arg value="create_domain"/>
		</exec>
	    </then>
	    <else>
		<echo file="create_domain.bat">CALL ${MIDDLEWARE_HOME}/oracle_common/common/bin/wlst.cmd -loadProperties ${user.dir}/silent-install.properties ${user.dir}/create_environment_wk.py</echo>
		<exec executable="create_domain.bat"/>
  	    </else>
	</if>
	<delete file="create_domain"/>
	<delete file="create_domain.bat"/>
	<delete file="create_environment_wk.py"/>
  </target>
  
  <target name="configure_domain">
	<input     message="Please enter the Admin Server user name:" addproperty="adminUser"/>
	<input     message="Please enter the Admin Server password:" addproperty="adminPassword"/>
	<copy file="configure_domain.py" tofile="configure_domain_wk.py" overwrite="true"/>
	<replace file="configure_domain_wk.py" token="adminUser"  value="${adminUser}"/>
	<replace file="configure_domain_wk.py" token="adminPassword"  value="${adminPassword}"/>	
	<replace file="configure_domain_wk.py" token="APP_SERVER_NAMES"  value="${APP_SERVER_NAMES}"/>	
	<replace file="configure_domain_wk.py" token="APP_SERVER_PORTS"  value="${APP_SERVER_PORTS}"/>	

	<echo>CONFIGURING DOMAIN</echo>
	<if>
		<equals arg1="${os_family}" arg2="unix"/>
		<then>
			<echo file="configure_domain">#!/bin/sh${line.separator} ${MIDDLEWARE_HOME}/oracle_common/common/bin/wlst.sh -loadProperties ${user.dir}/silent-install.properties ${user.dir}/configure_domain_wk.py</echo>
			<echo>${user.dir}</echo>
			<exec executable="/bin/bash">
				<arg value="configure_domain"/>
			</exec>
			<delete file="configure_domain"/>
		</then>
		<else>
			<echo file="configure_domain.bat">CALL ${MIDDLEWARE_HOME}/oracle_common/common/bin/wlst.cmd -loadProperties ${user.dir}/silent-install.properties ${user.dir}/configure_domain_wk.py</echo>
			<exec executable="configure_domain.bat"/>
			<delete file="configure_domain.bat"/>
		</else>
	</if>
	<delete file="configure_domain_wk.py"/>
	<antcall target="create_start_server_files"/>
  </target>

  <target name="create_start_server_files">
	<copy file="start_server_build.xml" tofile="${MIDDLEWARE_HOME}/user_projects/domains/${DOMAIN_NAME}/wlst_scripts/build.xml" overwrite="true"/>
	<echo file="${MIDDLEWARE_HOME}/user_projects/domains/${DOMAIN_NAME}/wlst_scripts/startAdminServer.py">
nmConnect(userConfigFile=CONFIGURATION_HOME + '/domains/' + DOMAIN_NAME + '/wlst_scripts/userconfigfile.secure', userKeyFile=CONFIGURATION_HOME + '/domains/' + DOMAIN_NAME + '/wlst_scripts/userkeyfile.secure', host=ADMIN_HOST, port=NODE_MANAGER_PORT, domainName=DOMAIN_NAME, domainDir=CONFIGURATION_HOME + '/domains/' + DOMAIN_NAME, nmType=NODE_MANAGER_MODE)
prps = makePropertiesObject("weblogic.ListenPort=7001")
nmServerStatus('AdminServer')
nmStart('AdminServer', props=prps)
nmDisconnect()
	</echo> 
	<echo file="${MIDDLEWARE_HOME}/user_projects/domains/${DOMAIN_NAME}/wlst_scripts/startNodeManager.py">
startNodeManager(verbose='true',NodeManagerHome=CONFIGURATION_HOME + '/domains/' + DOMAIN_NAME + '/nodemanager')
	</echo>
	<echo file="${MIDDLEWARE_HOME}/user_projects/domains/${DOMAIN_NAME}/wlst_scripts/createAuthFiles.py">
admin_server_url = 't3://' + ADMIN_HOST + ':' + '7001';
connect('adminUser', 'adminPassword', url=admin_server_url)
prps = makePropertiesObject("weblogic.ListenPort=8001")
storeUserConfig(CONFIGURATION_HOME + '/domains/' + DOMAIN_NAME + '/wlst_scripts/generated_auth_files/userconfigfile.secure', CONFIGURATION_HOME + '/domains/' + DOMAIN_NAME + '/wlst_scripts/generated_auth_files/userkeyfile.secure')
nmDisconnect();
	</echo>
	<copy file="${user.dir}/ant-contrib.jar" tofile="${MIDDLEWARE_HOME}/user_projects/domains/${DOMAIN_NAME}/wlst_scripts/ant-contrib.jar" overwrite="true"/>
	<echo file="${MIDDLEWARE_HOME}/user_projects/domains/${DOMAIN_NAME}/wlst_scripts/silent-install.properties">
JAVA_HOME=${JAVA_HOME}
CONFIGURATION_HOME=${CONFIGURATION_HOME}
DOMAIN_NAME=${DOMAIN_NAME}
ADMIN_HOST=${ADMIN_HOST}
NODE_MANAGER_MODE=${NODE_MANAGER_MODE}
NODE_MANAGER_PORT=${NODE_MANAGER_PORT}
WEBLOGIC_HOME=${WEBLOGIC_HOME}
MIDDLEWARE_HOME=${MIDDLEWARE_HOME}
	</echo>
	<if>
	    <equals arg1="${os_family}" arg2="unix"/>
	    <then>
		<echo file="${MIDDLEWARE_HOME}/user_projects/domains/${DOMAIN_NAME}/wlst_scripts/setEnvironmentVars.sh">
export PATH=$PATH:${MIDDLEWARE_HOME}/oracle_common/modules/thirdparty/org.apache.ant/1.9.8.0.0/apache-ant-1.9.8/bin
export JAVA_HOME=${JAVA_HOME}
		</echo>
	    </then>
	    <else>
		<echo file="${MIDDLEWARE_HOME}/user_projects/domains/${DOMAIN_NAME}/wlst_scripts/setEnvironmentVars.bat">
set PATH=%PATH%;${MIDDLEWARE_HOME}/oracle_common/modules/thirdparty/org.apache.ant/1.9.8.0.0/apache-ant-1.9.8/bin
set JAVA_HOME=${JAVA_HOME}
		</echo>
  	    </else>
	</if>
  </target>
</project>
